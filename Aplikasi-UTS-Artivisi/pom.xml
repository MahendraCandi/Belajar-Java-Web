<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.candi.app</groupId>
  <artifactId>Aplikasi-UTS-Artivisi</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>Aplikasi-UTS-Artivisi</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	<maven.compiler.source>1.6</maven.compiler.source>
	<maven.compiler.target>1.6</maven.compiler.target>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
	<dependency>
		<groupId>javax.servlet</groupId>
		<artifactId>javax.servlet-api</artifactId>
		<version>4.0.0</version>
		<scope>provided</scope> <!--Maksud scope provided adalah dikenali pada waktu koding, namun pada hasil akhir (war) tidak ikut disertakan jadi hanya digunakan ketika di compile saja. Menggunakan ini karena javax.servlet sudah ada di servernya-->
	</dependency>
	<dependency>
		<groupId>mysql</groupId>
		<artifactId>mysql-connector-java</artifactId>
		<version>5.1.39</version> <!-- ganti ke 5.1.39 jika ada warning tentang jam-->
		<scope>runtime</scope>
	</dependency>
  </dependencies>

  <build>
    <finalName>Artivisi</finalName>
  </build>
	
</project>
